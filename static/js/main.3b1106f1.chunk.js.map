{"version":3,"sources":["reducers/wearher.jsx","reducers/rootReducer.jsx","sagas/weatherSaga.jsx","sagas/rootSaga.jsx","store.jsx","actionCreators.jsx","components/Details/index.jsx","components/Header/index.jsx","components/Weather/index.jsx","components/Footer/index.jsx","components/App/App.jsx","index.jsx"],"names":["initState","weatherCitys","thisCity","reducer","state","action","type","payload","weatherFive","city","name","combineReducers","fetchWeatherAsync","directionsSaga","put","console","log","takeEvery","rootSaga","all","weatherSaga","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","root","weatherCity","Details","isScrollingDown","isShowMore","componentDidMount","a","props","location","pathname","cityInfo","slice","length","fetch","response","json","changeWeatherCity","setState","history","replace","handleClick","handleChangeCity","e","target","value","this","className","placeholder","onChange","to","onClick","list","map","item","Math","round","main","temp","dt_txt","PureComponent","withRouter","connect","dispatch","Header","companyName","Weather","cityMass","element","newArray","nomer","Number","split","Footer","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b1106f1.chunk.js","sourcesContent":["const initState = {\n  weatherCitys:{},\n  thisCity:'',\n}\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n\n    case 'FETCH_WEATHER': {\n      return {\n        weatherCitys: action.payload.weatherFive,\n        thisCity: action.payload.weatherFive.city.name,\n      }\n    }\n    case 'CHANGE_WEATHER': {\n      return {\n        thisCity: action.payload.thisCity,\n        weatherCitys: action.payload.weatherFive,\n      }\n    }\n    default: return state;\n  }\n\n  \n\n}\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport thisCity from './wearher'\nimport weatherCitys from './wearher'\n\nexport default combineReducers({\n    weatherCitys,\n    thisCity,\n});\n","import { put, takeEvery } from 'redux-saga/effects';\r\n\r\nexport function* fetchWeatherAsync() {\r\n    const weatherFive = [{ city: 'Minsk' }, { city: 'Antalya' }, { city: 'Moscow' }, { city: 'Bratislava' }]\r\n    yield put({ type: 'FETCH_WEATHER', payload: { weatherFive } });\r\n    console.log(1)\r\n}\r\n\r\nexport default function* directionsSaga() {\r\n    yield takeEvery('FETCH_DIRECTIONS', fetchWeatherAsync);\r\n  }\r\n  \r\n","import { all } from 'redux-saga/effects';\nimport weatherSaga from './weatherSaga';\n\nexport default function* rootSaga() {\n    yield all([weatherSaga()]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from './reducers/rootReducer';\nimport root from './sagas/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(root);\nexport default store;\n","export function weatherCity(weatherFive) {\n  return {\n    type: 'FETCH_WEATHER',\n    payload: { weatherFive }\n  }\n}\nexport function changeWeatherCity(weatherFive, thisCity) {\n  return {\n    type: 'CHANGE_WEATHER',\n    payload: { weatherFive, thisCity }\n  }\n}","import { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { changeWeatherCity } from '../../actionCreators';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { weatherCity } from '../../actionCreators'\r\nimport './Details.scss';\r\n\r\nclass Details extends PureComponent {\r\n  state = {\r\n    isScrollingDown: false,\r\n    isShowMore: false,\r\n    city: '',\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      const cityInfo = await this.props.location.pathname;\r\n      const city = cityInfo.slice(4, cityInfo.length)\r\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=b5647a55e8d4130e223c36880624811e`);\r\n      const weatherFive = await response.json();\r\n      const { changeWeatherCity } = this.props;\r\n      changeWeatherCity(weatherFive);\r\n      this.setState({ city: city })\r\n      this.props.history.replace(await city);\r\n      this.setState({ isShowMore: true });\r\n    } catch (err) {\r\n      return this.setState({ isShowMore: false });\r\n    }\r\n  }\r\n\r\n  handleClick = async (city) => {\r\n    this.setState({ isShowMore: false });\r\n    try {\r\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=b5647a55e8d4130e223c36880624811e`);\r\n      const weatherFive = await response.json();\r\n      const { weatherCity } = this.props;\r\n      weatherCity(await weatherFive);\r\n      const { changeWeatherCity } = this.props;\r\n      changeWeatherCity(await weatherFive, await city);\r\n      city = weatherFive.city.name;\r\n      this.setState({ isShowMore: true });\r\n      this.setState({ city });\r\n      this.props.history.replace(await city);\r\n    }\r\n    catch (err) {\r\n      return this.setState({ isShowMore: false });\r\n    }\r\n  }\r\n\r\n  handleChangeCity = (e) => {\r\n    this.setState({ city: e.target.value })\r\n  };\r\n\r\n  render() {\r\n    const { isShowMore } = this.state;\r\n    const { city } = this.state;\r\n    const { weatherCitys } = this.props;\r\n    return (\r\n      <section className=\"form\">\r\n        <input placeholder='enter city' onChange={this.handleChangeCity} value={city} />\r\n        {city.length !== 0 &&\r\n          <Link to={isShowMore ? `/in/${city}` : '/in/'} className=\"form__button\" onClick={() => this.handleClick(city)}>\r\n            Search New City\r\n          </Link>\r\n        }\r\n        <br />\r\n        {city.length !== 0 ? isShowMore ?\r\n          <i className='clue'>If the {city} is not on the main page, it will automatically be added!</i>\r\n          : <i className='clue'>No such city: '{city}'.\r\n            Please enter an existing city or return to </i>:console.log('')\r\n        }\r\n        {isShowMore &&\r\n          <table className=\"weather\">\r\n            <tr>\r\n              <td className=\"weather__td\">Temperature:℃</td>\r\n              <td className=\"weather__td\">Date</td>\r\n            </tr>\r\n            {weatherCitys.list.map((item) => (\r\n              <tr>\r\n                <td className=\"weather__td\">{Math.round(item.main.temp)}℃</td>\r\n                <td className=\"weather__td\">{item.dt_txt}</td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n        }\r\n        <Link to={`/${city}`} className=\"form__button\">HOME</Link>\r\n      </section>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ weatherCitys, thisCity }) => ({\r\n  thisCity: thisCity.thisCity,\r\n  weatherCitys: weatherCitys.weatherCitys,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeWeatherCity: (weatherFive, thisCity) => dispatch(changeWeatherCity(weatherFive, thisCity)),\r\n  weatherCity: (weatherFive) => dispatch(weatherCity(weatherFive)),\r\n});\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Details));\r\n","import \"./Header.scss\"\nimport { PureComponent } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Header extends PureComponent {\n    render() {\n        return (\n            <header className=\"header\">\n                <div className=\"container\">\n                    <h3>Weather☼</h3>\n                </div>\n            </header>\n        )\n    }\n}\n\nconst mapStateToProps = ({ companyName }) => ({\n    companyName: companyName,\n});\nexport default connect(mapStateToProps)(Header);","import { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { weatherCity } from '../../actionCreators'\r\nimport { withRouter } from 'react-router-dom';\r\nimport './Weather.scss'\r\n\r\nclass Weather extends PureComponent {\r\n  state = {\r\n    isShowMore: false,\r\n    cityMass: [{ city: 'Minsk' }, { city: 'Antalya' }, { city: 'Moscow' }, { city: 'Bratislava' }],\r\n    city: '',\r\n  };\r\n\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      const cityInfo = this.props.location.pathname;\r\n      const city = cityInfo === '/' ? 'Minsk' : cityInfo.slice(1, cityInfo.length);\r\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=b5647a55e8d4130e223c36880624811e`);\r\n      const weatherFive = await response.json();\r\n      const { weatherCity } = this.props;\r\n      weatherCity(await weatherFive);\r\n      this.setState({ isShowMore: true });\r\n      const { cityMass } = this.state;\r\n      const element = { city: city };\r\n      const newArray = [...cityMass, element];\r\n      let nomer = 0;\r\n      {\r\n        cityMass.map((item) => (\r\n           item.city === city ? nomer = Number (nomer) + 1 : console.log('')\r\n        ))\r\n        nomer !== 1 ? this.setState({ cityMass: newArray }): console.log('')\r\n      };\r\n\r\n    }\r\n    catch (err) {\r\n    }\r\n  }\r\n\r\n  handleClick = async (city) => {\r\n    try {\r\n      const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=b5647a55e8d4130e223c36880624811e`);\r\n      const weatherFive = await response.json();\r\n      const { weatherCity } = this.props;\r\n      weatherCity(weatherFive);\r\n      this.setState({ isShowMore: true });\r\n      this.setState({ city });\r\n      this.props.history.replace(city);\r\n    }\r\n    catch (err) {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isShowMore } = this.state;\r\n    const { cityMass } = this.state;\r\n    const { weatherCitys } = this.props;\r\n    const { thisCity } = this.props;\r\n    return (\r\n      <section className=\"form\">\r\n        {cityMass.map((item) => (\r\n          <button className=\"form__button\" onClick={() => this.handleClick(`${item.city} `)} >\r\n            {item.city}\r\n          </button>\r\n        ))}\r\n        {isShowMore &&\r\n          <div>\r\n            <div className='form__text'>Now the weather in {thisCity} </div>\r\n            <table className=\"table\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Temperature</td>\r\n                  <td>Date</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{Math.round(weatherCitys.list[0].main.temp)}℃</td>\r\n                  <td>{weatherCitys.list[0].dt_txt.split(\" \")[0]}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{Math.round(weatherCitys.list[8].main.temp)}℃</td>\r\n                  <td>{weatherCitys.list[16].dt_txt.split(\" \")[0]}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>{Math.round(weatherCitys.list[16].main.temp)}℃</td>\r\n                  <td>{weatherCitys.list[16].dt_txt.split(\" \")[0]}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n            <Link to={`/in/${thisCity}`} className=\"form__button\">\r\n              More weather in {thisCity}\r\n            </Link>\r\n          </div>\r\n        }\r\n      </section>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = ({ weatherCitys, thisCity }) => ({\r\n  thisCity: thisCity.thisCity,\r\n  weatherCitys: weatherCitys.weatherCitys,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  weatherCity: (weatherFive) => dispatch(weatherCity(weatherFive)),\r\n});\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Weather));\r\n","import \"./Footer.scss\"\r\nimport { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Footer extends PureComponent {\r\n    render() {\r\n        return (\r\n            <footer className=\"Footer \">\r\n                <div className=\"container\">\r\n                    <h5>All rights reserved 2022</h5>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ companyName }) => ({\r\n    companyName: companyName,\r\n});\r\nexport default connect(mapStateToProps)(Footer);","import { PureComponent } from 'react';\nimport './App.scss';\nimport { HashRouter as Router, Switch, Route, Link, withRouter } from 'react-router-dom';\nimport Details from '../Details';\nimport Header from \"../Header\";\nimport Weather from \"../Weather\";\nimport Footer from '../Footer';\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <Router>\n        <main>\n          <Link to=\"/\"></Link>\n          <Link to=\"/in/\"></Link>\n          <Switch>\n            <Route exact path=\"/:id?\">\n              <Header />\n              <Weather />\n              <Footer />\n            </Route>\n            <Route exact path=\"/in/:id?\" >\n              <Header />\n              <Details />\n              <Footer />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n    )\n  }\n}\n\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.scss';\nimport App from './components/App/App';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}